# global settings will be applied to all jobs
variables:
  VERBOSE: 1
  DIAGNOSTIC: 1

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TITLE != $DOCS_AUTOCOMMIT_TITLE
    - if: $CI_COMMIT_BRANCH =~ /^columnar-.*$/ && $CI_COMMIT_TITLE != $DOCS_AUTOCOMMIT_TITLE
    - if: $TEST

# to skip ci add [ci skip] or [skip ci] in commit message in any capitalization

stages:
  - mirroring
  - routines
  - publish
  - hooks

job_mirror:
  stage: mirroring
  rules:
    - if: $TEST==null && $CI_COMMIT_BRANCH == "master"
  tags:
    - dev-host
  dependencies: []
  script:
    - ~/gitsync_columnar.sh
  cache: {}

simple_tests:
  stage: routines
  needs: [ ]
  rules:
    - if: $TEST==null
    - if: $TEST =~ /simple/
  tags:
    - docker
  image: registry.gitlab.com/manticoresearch/dev/ubertests_public:320
  variables:
    CTEST_BUILD_CONFIGURATION: "Debug"
    CACHEB: "../cache"
  #    CTEST_CMAKE_GENERATOR: "Ninja" # fails because of coverage
  script:
    - ctest -V -S cmake/citest.cmake
  after_script:
    - cmake -P misc/junit/citestresult.cmake
  artifacts:
    reports:
      junit: build/junit_*.xml
    expire_in: 12 hrs
    when: always
  cache:
    key: bionic
    paths:
      - cache
  retry: 1


release_tests:
  stage: routines
  needs: [ ]
  rules:
    - if: $TEST==null
    - if: $TEST =~ /release/
  tags:
    - docker
  image: registry.gitlab.com/manticoresearch/dev/ubertests_public:320
  variables:
    CTEST_BUILD_CONFIGURATION: "RelWithDebInfo"
    CACHEB: "../cache"
    CTEST_CMAKE_GENERATOR: "Ninja"
    CMAKE_INTERPROCEDURAL_OPTIMIZATION: 1
  script:
    - ctest -V -S cmake/citest.cmake
  after_script:
    - cmake -P misc/junit/citestresult.cmake
  artifacts:
    reports:
      junit: build/junit_*.xml
    expire_in: 12 hrs
    when: always
  cache:
    key: bionic
    paths:
      - cache
  retry: 1


win_tests:
  stage: routines
  rules:
    - if: $TEST==null
    - if: $TEST =~ /windows/
  tags:
    - windev19
    - build
  needs: [ ]
  variables:
    LIBS_BUNDLE: "x:/bundle"
    CACHEB: "x:/cache"
    BOOST_ROOT: "x:/boost_1_75_0"
    CTEST_CMAKE_GENERATOR: "Visual Studio 16 2019"
  script:
    - 'net use x: \\\\VBOXSRV\\shared'
    - ctest -V -S cmake/citest.cmake -C Debug
  artifacts:
    paths:
      - build/Testing/2*/*.xml
    expire_in: 12 hrs
    when: always
  cache: { }
  retry: 1

# convert ctest reports from windows to junit (don't want to work with php/xslt there)
push_win_results:
  stage: publish
  needs: [ win_tests ]
  tags:
    - docker
  image: registry.gitlab.com/manticoresearch/dev/ubertests_public:320
  variables:
    GIT_STRATEGY: fetch
  script:
    - cmake -P misc/junit/citestresult.cmake
  artifacts:
    reports:
      junit: build/junit_*.xml
  cache: { }
  retry: 1
  allow_failure: true


.deploy_hook:
  stage: hooks
  rules:
    - if: $CI_COMMIT_TITLE !~ /^noci .*$/i
      when: always
  trigger:
    include: packaging.yml
  needs:
    - job: simple_tests
      artifacts: false
    - job: release_tests
      artifacts: false
    - job: win_tests
      artifacts: false
